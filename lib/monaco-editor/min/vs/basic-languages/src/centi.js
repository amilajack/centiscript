/*!-----------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * monaco-languages version: 0.7.0(undefined)
 * Released under the MIT license
 * https://github.com/Microsoft/monaco-languages/blob/master/LICENSE.md
 *-----------------------------------------------------------------------------*/
define("vs/basic-languages/src/centi",["require","exports"],function(e,t){t.conf={comments:{lineComment:"//",blockComment:["/*","*/"]},brackets:[["{","}"],["[","]"],["(",")"],["<",">"]],autoClosingPairs:[{open:'"',close:'"',notIn:["string","comment"]},{open:"{",close:"}",notIn:["string","comment"]},{open:"[",close:"]",notIn:["string","comment"]},{open:"(",close:")",notIn:["string","comment"]}]},t.language={defaultToken:"",tokenPostfix:".centi",keywords:["boolean","break","byte","case","catch","char","class","const","continue","debugger","default","delete","do","double","else","enum","export","extends","false","final","finally","float","for","function","goto","if","implements","import","in","instanceof","int","interface","long","native","new","null","package","private","protected","public","return","short","static","super","switch","synchronized","this","throw","throws","transient","true","try","typeof","var","void","volatile","while","with","Infinity","NaN","MAX_VALUE","MIN_VALUE","POSITIVE_INFINITY","NEGATIVE_INFINITY","E","LN2","LN10","LOG2E","LOG10E","PI",'PI"',"HALF_PI","SQRT1_2","SQRT2","abs","acos","asin","atan","atan2","ceil","cos","exp","floor","imul","log","max","min","pow","random","round","sin","sqrt","tan","elseIf","func","c","time","w","sizeW","h","sizeH","frame","cx","cy","mx","my","down","bg","sz","size","tempo","bpm","sec","preSec","divide","beat","initSec","bgcolor","drawcolor","bFill","gradient","kdtree","clr","clear","Obj","obj","rnd","rand","nz","noise","pixel","tri","rect","oval","arc","ln","line","curve","moveTo","lineTo","curveTo","lines","text","font","boundingBox","strk2fill","xys2pts","beginShape","endShape","me","drawMe","lw","lineWidth","lj","lineJoin","lc","lineCap","bm","blendMode","hcol","col","fill","strk","stroke","grad","gradR","gradColor","gradHex","colorString","push","pop","rotate","scale","translate","transform","drawFFT","drawWave","interp","dist","wrap","minmax","minMax","map","zmap","avg","cent","curves","getPointsOnCurve","getPointOnCubicBezier","radToDeg","r2d","degToRad","d2r","tree","nears","noiseToFreq","n2f","loop","shortNum","reverse","fold","remove","clip","vec2","Vec2","Rectangle","Numerical","set","clone","equals","normalized","normalize","dist","distance","dot","cross","rotation","setRotation","len","setLen","rotate","add","subtract","multiply","divide","modulo","negate","isZero","now","grid","tween","seg","segs","shrink","mosaic","glitch","crash","dropShadow","QuadIn","CubicIn","QuartIn","QuintIn","SineIn","ExpoIn","CircIn","ElasticIn","BackIn","BounceIn","QuadOut","CubicOut","QuartOut","QuintOut","SineOut","ExpoOut","CircOut","ElasticOut","BackOut","BounceOut","QuadInOut","CubicInOut","QuartInOut","QuintInOut","SineInOut","ExpoInOut","CircInOut","ElasticInOut","BackInOut","BounceInOut","bitmapFont","bitmapText","bitmap5by8","getBitmapFontCode"],builtins:["define","require","window","document","undefined"],operators:["=",">","<","!","~","?",":","==","<=",">=","!=","&&","||","++","--","+","-","*","/","&","|","^","%","<<",">>",">>>","+=","-=","*=","/=","&=","|=","^=","%=","<<=",">>=",">>>="],brackets:[["(",")","bracket.parenthesis"],["{","}","bracket.curly"],["[","]","bracket.square"]],symbols:/[~!@#%\^&*-+=|\\:`<>.?\/]+/,escapes:/\\(?:[btnfr\\"']|[0-7][0-7]?|[0-3][0-7]{2})/,exponent:/[eE][\-+]?[0-9]+/,regexpctl:/[(){}\[\]\$\^|\-*+?\.]/,regexpesc:/\\(?:[bBdDfnrstvwWn0\\\/]|@regexpctl|c[A-Z]|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4})/,tokenizer:{root:[[/([a-zA-Z_\$][\w\$]*)(\s*)(:?)/,{cases:{"$1@keywords":["keyword","white","delimiter"],$3:["key.identifier","white","delimiter"],"$1@builtins":["predefined.identifier","white","delimiter"],"@default":["identifier","white","delimiter"]}}],{include:"@whitespace"},[/\/(?=([^\\\/]|\\.)+\/)/,{token:"regexp.slash",bracket:"@open",next:"@regexp"}],[/[{}()\[\]]/,"@brackets"],[/[;,.]/,"delimiter"],[/@symbols/,{cases:{"@operators":"operator","@default":""}}],[/\d+\.\d*(@exponent)?/,"number.float"],[/\.\d+(@exponent)?/,"number.float"],[/\d+@exponent/,"number.float"],[/0[xX][\da-fA-F]+/,"number.hex"],[/0[0-7]+/,"number.octal"],[/\d+/,"number"],[/'([^'\\]|\\.)*$/,"string.invalid"],[/'([^'\\]|\\.)*$/,"string.invalid"],[/"/,"string",'@string."'],[/'/,"string","@string.'"]],whitespace:[[/[ \t\r\n]+/,"white"],[/\/\*/,"comment","@comment"],[/\/\/.*$/,"comment"]],comment:[[/[^\/*]+/,"comment"],[/\/\*/,"comment.invalid"],["\\*/","comment","@pop"],[/[\/*]/,"comment"]],string:[[/[^\\"']+/,"string"],[/@escapes/,"string.escape"],[/\\./,"string.escape.invalid"],[/["']/,{cases:{"$#==$S2":{token:"string",next:"@pop"},"@default":"string"}}]],regexp:[[/(\{)(\d+(?:,\d*)?)(\})/,["@brackets.regexp.escape.control","regexp.escape.control","@brackets.regexp.escape.control"]],[/(\[)(\^?)(?=(?:[^\]\\\/]|\\.)+)/,["@brackets.regexp.escape.control",{token:"regexp.escape.control",next:"@regexrange"}]],[/(\()(\?:|\?=|\?!)/,["@brackets.regexp.escape.control","regexp.escape.control"]],[/[()]/,"@brackets.regexp.escape.control"],[/@regexpctl/,"regexp.escape.control"],[/[^\\\/]/,"regexp"],[/@regexpesc/,"regexp.escape"],[/\\\./,"regexp.invalid"],["/",{token:"regexp.slash",bracket:"@close"},"@pop"]],regexrange:[[/-/,"regexp.escape.control"],[/\^/,"regexp.invalid"],[/@regexpesc/,"regexp.escape"],[/[^\]]/,"regexp"],[/\]/,"@brackets.regexp.escape.control","@pop"]]}}});